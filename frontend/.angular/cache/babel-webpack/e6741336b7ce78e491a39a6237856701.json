{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let InfoComponent = /*#__PURE__*/(() => {\n  class InfoComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  InfoComponent.ɵfac = function InfoComponent_Factory(t) {\n    return new (t || InfoComponent)();\n  };\n\n  InfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfoComponent,\n    selectors: [[\"app-info\"]],\n    decls: 97,\n    vars: 0,\n    consts: [[\"id\", \"info\", 1, \"info-bg\", 2, \"background-color\", \"whitesmoke\"], [1, \"container\"], [1, \"section-title\"], [\"href\", \"#\", \"onclick\", \"return false;\", \"data-toggle\", \"tooltip\", \"title\", \"The Sensitivity regulates how sensitive the used Framework OpenCV will classify a examined window as a face.\", 2, \"cursor\", \"help\"], [\"href\", \"#\", \"onclick\", \"return false;\", \"data-toggle\", \"tooltip\", \"title\", \"The Scale-Factor regulates how exact the used Framework OpenCV will examine the original image. E.g. the value 1.01 means, that a image pyramid will be build up in 1% steps.\", 2, \"cursor\", \"help\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"href\", \"https://docs.opencv.org/2.4/modules/objdetect/doc/cascade_classification.html#cascadeclassifier-detectmultiscale\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"href\", \"https://github.com/opencv/opencv/tree/master/data/haarcascades\"], [\"href\", \"faq.html\"], [2, \"color\", \"crimson\"], [\"target\", \"_blank\", \"rel\", \"noopener noreferrer\", \"href\", \"https://en.wikipedia.org/wiki/HSL_and_HSV\"]],\n    template: function InfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6, \"To get a face detection resistant image you have to consider a couple of important points.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8, \"The results of the different methods very a lot dependent of the image size and color. Before downloading the new image it is highly recommended to test the resistancy against all available cascades. Each cascade is a model trained with different input values. Additionally you shoud try to test the \");\n        i0.ɵɵelementStart(9, \"a\", 3);\n        i0.ɵɵtext(10, \"Sensitivity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" at \\\"1\\\" and the \");\n        i0.ɵɵelementStart(12, \"a\", 4);\n        i0.ɵɵtext(13, \"Scale-Factor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \" at the lowest level possible. That causes the algorithm to detect way more False-Positives, but we want to be sure that your face will not be detected under most if not all circumstances. Thus you can be sure that your image will really be resistant against the Viola-Jones Framework. If your face gets detected through only one of the Cascades, please try a different convertion method. This method will not protect your image. More details and the used cascades can be fund here: \");\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"a\", 5);\n        i0.ɵɵtext(17, \"OpenCV documentation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \" or \");\n        i0.ɵɵelementStart(19, \"a\", 6);\n        i0.ɵɵtext(20, \"Cascades\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵtext(22, \"If there are any questions left, check out our \");\n        i0.ɵɵelementStart(23, \"a\", 7);\n        i0.ɵɵtext(24, \"FAQ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \" site.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"p\");\n        i0.ɵɵelementStart(27, \"b\");\n        i0.ɵɵtext(28, \"The size of your image should not exceed 5MB !\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"p\");\n        i0.ɵɵelementStart(30, \"b\");\n        i0.ɵɵtext(31, \"Image convertion takes ~ 2 - 20 sec.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"p\", 8);\n        i0.ɵɵelementStart(33, \"b\");\n        i0.ɵɵtext(34, \"Disclaimer:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"p\", 8);\n        i0.ɵɵtext(36, \"There is no 100% guarantee that the converted image is face detection resistant against all kind of face detection frameworks!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"p\");\n        i0.ɵɵtext(38, \"Description of the available methods:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"table\");\n        i0.ɵɵelementStart(40, \"tr\");\n        i0.ɵɵelementStart(41, \"th\");\n        i0.ɵɵtext(42, \"Method\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"th\");\n        i0.ɵɵtext(44, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"tr\");\n        i0.ɵɵelementStart(46, \"td\");\n        i0.ɵɵtext(47, \"Hide half\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"td\");\n        i0.ɵɵtext(49, \"Hides the lower part of the image behind a black rectangle with an alpha of 80%\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"tr\");\n        i0.ɵɵelementStart(51, \"td\");\n        i0.ɵɵtext(52, \"Black grid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"td\");\n        i0.ɵɵtext(54, \"Every 2nd pixel of the image will be black\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"tr\");\n        i0.ɵɵelementStart(56, \"td\");\n        i0.ɵɵtext(57, \"White grid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"td\");\n        i0.ɵɵtext(59, \"Every 2nd pixel of the image will be white\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"tr\");\n        i0.ɵɵelementStart(61, \"td\");\n        i0.ɵɵtext(62, \"Edges\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"td\");\n        i0.ɵɵtext(64, \"Only detected edges of the image will be displayed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"tr\");\n        i0.ɵɵelementStart(66, \"td\");\n        i0.ɵɵtext(67, \"HSV Color\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"td\");\n        i0.ɵɵtext(69, \"Changes the color scheme of the image to \");\n        i0.ɵɵelementStart(70, \"a\", 9);\n        i0.ɵɵtext(71, \"HSV\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"tr\");\n        i0.ɵɵelementStart(73, \"td\");\n        i0.ɵɵtext(74, \"Invert color\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"td\");\n        i0.ɵɵtext(76, \"Inverts every pixel of the image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"tr\");\n        i0.ɵɵelementStart(78, \"td\");\n        i0.ɵɵtext(79, \"Invert gray color\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"td\");\n        i0.ɵɵtext(81, \"Converts the image into a grayscale image and inverts every pixel of it\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"tr\");\n        i0.ɵɵelementStart(83, \"td\");\n        i0.ɵɵtext(84, \"Cartoon\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(85, \"td\");\n        i0.ɵɵtext(86, \"Cartoonizes the image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"tr\");\n        i0.ɵɵelementStart(88, \"td\");\n        i0.ɵɵtext(89, \"Color highlighting\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"td\");\n        i0.ɵɵtext(91, \"Converts a threshold of white color to black and highlights it\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"tr\");\n        i0.ɵɵelementStart(93, \"td\");\n        i0.ɵɵtext(94, \"Blue filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(95, \"td\");\n        i0.ɵɵtext(96, \"Shows only the blue channel of the image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".sticky[_ngcontent-%COMP%]{padding-top:130px}\"]\n  });\n  return InfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}